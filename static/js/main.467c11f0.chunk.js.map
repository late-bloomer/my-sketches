{"version":3,"sources":["store/sketch-service/ActionType.js","store/sketch-service/Reducer.js","store/RootReducer.js","store/ConfigStore.js","components/app/App.js","index.js"],"names":["SAVE_SKETCHES_DATA","initialState","sketches","rootReducer","combineReducers","sketchReducer","state","action","type","payload","middleware","reduxThunk","Layout","React","lazy","App","path","component","props","fallback","store","createStore","applyMiddleware","window","__STORE__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iHAAA,kCAAO,IAAMA,EAAqB,sB,wICInBC,EAAe,CAC1BC,SAAS,ICFb,IAIeC,EAJKC,YAAgB,CAChCC,cDIa,WAA4D,IAApCC,EAAmC,uDAA3BL,EAAcM,EAAa,uDAAJ,GAAI,EACrCA,EAA3BC,YADgE,MAC1D,GAD0D,IACrCD,EAAjBE,eADsD,MAC5C,GAD4C,EAExE,OAAQD,GACN,KAAKR,IACH,OAAO,2BACFM,GADL,IAEEJ,SAAUO,IAEd,QACE,OAAOH,MEbFI,EAAa,CACxBC,K,gCCFIC,EAASC,IAAMC,MAAK,kBAAM,sDAcjBC,EAZH,kBACV,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW,SAAAC,GAAK,OAC9B,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,cAACP,EAAD,eAAYM,cCFhBE,EFCGC,YACLlB,EACAmB,IAAe,WAAf,EAAmBZ,IEFvBa,OAAOC,UAAYJ,EAEnBK,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,IAAMO,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.467c11f0.chunk.js","sourcesContent":["export const SAVE_SKETCHES_DATA = 'SAVE_SKETCHES_DATA'","import {\n    SAVE_SKETCHES_DATA\n  } from './ActionType'\n  \n  export const initialState = {\n    sketches:[]\n  }\n  \n  export default function sketchReducer (state = initialState, action = {}) {\n    const { type ='', payload = [] } = action\n    switch (type) {\n      case SAVE_SKETCHES_DATA:\n        return {\n          ...state,\n          sketches: payload\n        }\n      default:\n        return state\n    }\n  }","import { combineReducers } from 'redux'\nimport sketchReducer from './sketch-service/Reducer'\n\nconst rootReducer = combineReducers({\n    sketchReducer,\n  });\n  \nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport rootReducer from './RootReducer'\n\nexport const middleware = [\n  reduxThunk\n]\n\nexport default function configureStore () {\n  return createStore(\n    rootReducer,\n    applyMiddleware(...middleware)\n  )\n}","import React, { Suspense } from 'react'\nimport { Route, Switch, BrowserRouter } from 'react-router-dom'\n//import Layout from '../layout/Layout'\nconst Layout = React.lazy(() => import('../layout/Layout')); //lazy loading\n\nconst App = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/\" component={props => \n        <Suspense fallback={<div>Loading...</div>}>\n          <Layout {...props} />\n        </Suspense>} \n      />\n    </Switch>\n  </BrowserRouter>\n)\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store/ConfigStore'\nimport './index.css';\nimport App from './components/app/App';\n\n\nconst store = configureStore()\nwindow.__STORE__ = store\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}